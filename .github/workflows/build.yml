# github repository actions 페이지에 나타날 이름
name: VeightCorp-Homework

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # build:
  #   name: 변경사항 체크 및 캐싱
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: NodeJS Setup
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: ${{ secrets.NODE_VERSION }}
  #     - name: 모듈 정보 캐싱
  #       uses: actions/cache@v2
  #       id: cache
  #       with:
  #         path: node_modules
  #         key: npm-packages-${{ hashFiles('**/package-lock.json') }}
  #     - name: 변경사항이 존재 할 경우 빌드
  #       if: steps.cache.outputs.cache-hit != 'true'
  #       run: npm install
  #     - run: npm run build
  deploy:
    needs: build
    name: 배포 시작
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # - uses: docker/setup-buildx-action@v2

      # - name: 도커 로그인
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_USER }}
      #     password: ${{ secrets.DOCKER_PASS }}
      # - name: DB 이미지 빌드, 푸쉬
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: ./prisma/Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKER_REPO }}/veightcorp-db:deploy
      # - name: Server 이미지 빌드, 푸쉬
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKER_REPO }}/veightcorp-homework:deploy
      - name: Deploy to EC2
        run: |
            cd /
            echo "${{ secrets.PRIVATE_KEY }}" >> private_key.pem
            chmod 600 private_key.pem
            ssh -i "private_key.pem" ${{ secrets.EC2_USER }}@${{ secrets.HOST }}

            whoami


        # uses: appleboy/ssh-action@v1.0.3
        # with:
        #   host: ${{ secrets.HOST }}
        #   username: ${{ secrets.EC2_USER }}
        #   port: ${{ secrets.PORT }}
        #   key: ${{ secrets.PRIVATE_KEY }}
        #   script: |
        #           whoami
              
          # git config --global user.name ${{ secrets.GIT_USER }}
          # git config --global user.email ${{ secrets.GIT_USER_EMAIL }}
                  
          # cd ./usr/src/app
          
          # git pull origin main

          # echo "${{ secrets.ENV_VAL }}" .env
          
          # sudo service docker start
          # sudo docker login --username ${{ secrets.DOCKER_USER }}
          # sudo docker system prune -a --volumes -f
          # sudo docker-compose build
          # sudo docker-compose up
                   